<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shiny on Time-frequency Transform</title>
    <link>/tags/shiny/</link>
    <description>Recent content in Shiny on Time-frequency Transform</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&amp;copy; 2016-2017. All rights reserved.</copyright>
    <lastBuildDate>Fri, 16 Dec 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/shiny/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ERP visualization: Shiny Demo updated</title>
      <link>/2016/12/16/erp-visualization-shiny-demo-updated/</link>
      <pubDate>Fri, 16 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/16/erp-visualization-shiny-demo-updated/</guid>
      <description>Shiny app updated!In my last post unleashed the Shiny app I’d knocked up in a few hours to do some basic display of different confidence interval types and difference waves. I’ve been hacking away at it on and off and I’ve now added some exciting new features!
You can now try loading up your own data. You’ll need a .csv file with the following structure:
No headerComma-separated valuesEach row should be one time-point, one subject, columns should be “condition1”, “condition2”, “Time”, “Subject”Here’s the first few lines of the example data I include (note this is already after import, so it’s stripped the commas between values).</description>
    </item>
    
    <item>
      <title>ERP visualization: Basic Shiny Demo</title>
      <link>/2016/12/07/erp-visualization-basic-shiny-demo/</link>
      <pubDate>Wed, 07 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/07/erp-visualization-basic-shiny-demo/</guid>
      <description>Shiny appIn an unusual fit of enthusiasm, I decided to have to go at writing a little app in Shiny, a simple programming framework to make web-based apps using R. So, as usual, all programmed using RStudio, the devs who also make Shiny and various fantastic R packages such as dplyr and ggplot2.
It turned out to be pretty simple. I’m planning to add various additional functions as I get time to work on my blog posts, like allowing people to use their own data, for example.</description>
    </item>
    
  </channel>
</rss>